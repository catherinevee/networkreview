================================================================================
                    BGP IN CLOUD PLATFORMS:
                    GCP, AWS, AND AZURE
================================================================================

This document provides comprehensive guidance on how Border Gateway Protocol
(BGP) is used in Google Cloud Platform (GCP), Amazon Web Services (AWS), and
Microsoft Azure for hybrid connectivity, routing, and network design.

================================================================================
1. BGP FUNDAMENTALS IN CLOUD ENVIRONMENTS
================================================================================

1.1 Why BGP in Cloud?
---------------------

BGP is the standard protocol for dynamic routing between cloud platforms and
on-premises networks. It provides:

Key Benefits:
✓ Dynamic route exchange (no manual static routes)
✓ Automatic failover and redundancy
✓ Scalability for large route tables
✓ Traffic engineering capabilities
✓ Multi-path support (ECMP)
✓ Standard protocol (vendor-neutral)

Common Use Cases:
- Hybrid cloud connectivity (on-premises to cloud)
- Multi-region routing within cloud
- Transit routing between VPCs/VNets
- SD-WAN integration
- Disaster recovery failover

1.2 BGP in Cloud vs Traditional BGP
------------------------------------

Similarities:
- Uses same BGP protocol (RFC 4271)
- Supports eBGP and iBGP
- Path attributes (AS_PATH, LOCAL_PREF, MED)
- Standard BGP communities
- Route filtering and policies

Differences in Cloud:
- Managed BGP speakers (Cloud Routers/Virtual Routers)
- Limited access to BGP configuration
- Automatic BGP session management
- Restricted ASN ranges (private ASNs commonly used)
- Cloud-specific features (route priorities, custom advertisements)
- No direct CLI access to BGP process

BGP Operational Model:
┌────────────────────────────────────────────────────────────────┐
│                    On-Premises Network                         │
│                                                                │
│  [Customer Router] ← Full BGP control                          │
│         ↓ eBGP                                                 │
│         ↓                                                      │
│  [VPN/Interconnect] ═══════════════════════════════════════   │
│         ↓                                                      │
│  [Cloud Router/Virtual Router] ← Managed BGP, limited config  │
│         ↓                                                      │
│  [VPC/VNet] ← Routes learned via BGP                          │
└────────────────────────────────────────────────────────────────┘

================================================================================
2. BGP IN GOOGLE CLOUD PLATFORM (GCP)
================================================================================

2.1 GCP Cloud Router Overview
------------------------------

Cloud Router is GCP's managed BGP speaker that enables dynamic routing for:
- Cloud VPN (HA VPN and Classic VPN)
- Cloud Interconnect (Dedicated and Partner)
- Router Appliance (third-party NVAs)

Key Features:
- Fully managed service (no VMs to maintain)
- Automatic redundancy and high availability
- Support for IPv4 and IPv6
- BFD support for fast failure detection
- Route advertisements (default, custom, all subnets)
- Multiple BGP sessions per Cloud Router
- Graceful restart support

Cloud Router Limits:
- 128 BGP sessions per Cloud Router
- 1,000,000 routes learned (soft limit)
- 200 custom advertisements per Cloud Router
- ASN range: 64512-65534, 4200000000-4294967294 (private)

2.2 GCP BGP Configuration
--------------------------

ASN Configuration:

Cloud Router ASN:
- Must use private ASN (64512-65534 or 4200000000-4294967294)
- Cannot use 64512 (reserved by GCP)
- Should be unique per region for same VPC
- Can use same ASN across different VPCs

Peer ASN:
- Can be public or private ASN
- Typically on-premises router ASN
- Must not conflict with Cloud Router ASN

Create Cloud Router with BGP:
gcloud compute routers create cloud-router-1 \
  --network=prod-vpc \
  --region=us-central1 \
  --asn=65001

Configure BGP Session (VPN Example):
gcloud compute routers add-bgp-peer cloud-router-1 \
  --peer-name=on-prem-peer \
  --interface=tunnel-1-interface \
  --peer-ip-address=169.254.1.1 \
  --peer-asn=65002 \
  --region=us-central1

Configure BGP Session (Interconnect VLAN Attachment):
gcloud compute routers add-bgp-peer cloud-router-1 \
  --peer-name=interconnect-peer \
  --interface=interconnect-1-interface \
  --peer-ip-address=169.254.1.1 \
  --peer-asn=65002 \
  --region=us-central1 \
  --advertised-route-priority=100

2.3 GCP BGP Route Advertisement
--------------------------------

Advertisement Modes:

1. DEFAULT Mode:
   - Advertises all subnet routes in the region
   - Suitable for most use cases
   - No custom configuration needed

2. CUSTOM Mode:
   - Advertise specific IP ranges
   - More granular control
   - Required for route filtering

Configure Custom Advertisement:
gcloud compute routers update cloud-router-1 \
  --region=us-central1 \
  --advertisement-mode=CUSTOM \
  --set-advertisement-groups=ALL_SUBNETS \
  --set-advertisement-ranges=10.0.0.0/8,172.16.0.0/12

Advertisement Groups:
- ALL_SUBNETS: All subnet routes in VPC
- ALL_VPC_SUBNETS: All subnets across all regions
- ALL_PEER_VPC_SUBNETS: Subnets from peered VPCs

Custom IP Ranges:
- Advertise specific prefixes (on-premises, other clouds)
- Each range can have description
- Each range can have priority (route preference)

Example with Priority:
gcloud compute routers update cloud-router-1 \
  --region=us-central1 \
  --advertisement-mode=CUSTOM \
  --set-advertisement-ranges=\
10.0.0.0/16:description=primary-site:priority=100,\
10.1.0.0/16:description=backup-site:priority=200

2.4 GCP BGP Path Selection and Traffic Engineering
---------------------------------------------------

Route Priority (GCP-Specific):
- Lower value = higher preference (opposite of LOCAL_PREF)
- Range: 0-65535
- Default: 100 for subnet routes
- Used to prefer one path over another

Example Use Case - Active/Passive Failover:
# Primary path (Cloud Interconnect)
--advertised-route-priority=100

# Backup path (Cloud VPN)
--advertised-route-priority=200

Traffic Engineering with MED:
# Set MED on BGP peer (outbound from GCP)
gcloud compute routers update-bgp-peer cloud-router-1 \
  --peer-name=on-prem-peer \
  --region=us-central1 \
  --advertised-route-priority=100

# On-premises router receives MED=100
# Lower MED preferred for incoming traffic to GCP

AS Path Prepending (Inbound Control):
- Cannot directly configure on Cloud Router
- Configure on on-premises router
- Prepend AS_PATH to make certain paths less preferred

Example (on on-premises router):
route-map PREPEND permit 10
  set as-path prepend 65002 65002 65002
router bgp 65002
  neighbor 169.254.1.2 route-map PREPEND out

2.5 GCP BGP Timers and BFD
---------------------------

BGP Timers:
- Keepalive: 20 seconds (default)
- Hold time: 60 seconds (default)
- Not configurable (GCP managed)

BFD (Bidirectional Forwarding Detection):
- Provides sub-second failure detection
- Enabled per BGP session
- Recommended for production

Enable BFD:
gcloud compute routers add-bgp-peer cloud-router-1 \
  --peer-name=on-prem-peer \
  --interface=tunnel-1-interface \
  --peer-ip-address=169.254.1.1 \
  --peer-asn=65002 \
  --region=us-central1 \
  --enable-bfd \
  --bfd-session-initialization-mode=ACTIVE

BFD Parameters:
- Min Tx Interval: 1000ms (default)
- Min Rx Interval: 1000ms (default)
- Multiplier: 3 (default)
- Detection time: ~3 seconds

2.6 GCP BGP Best Practices
---------------------------

✓ Use HA VPN with multiple tunnels and BGP sessions
✓ Enable BFD for fast failure detection (sub-second)
✓ Use CUSTOM advertisement mode for granular control
✓ Configure route priorities for traffic engineering
✓ Use unique ASNs per region for same VPC
✓ Document ASN assignments and route advertisements
✓ Monitor BGP session status with Cloud Monitoring
✓ Test failover scenarios regularly
✓ Use Cloud Router per region for redundancy

Common GCP BGP Design:
┌────────────────────────────────────────────────────────────────┐
│                        GCP VPC (Global)                        │
│                                                                │
│  us-central1                      europe-west1                │
│  ┌──────────────────┐             ┌──────────────────┐        │
│  │ Cloud Router 1   │             │ Cloud Router 2   │        │
│  │ ASN: 65001       │             │ ASN: 65001       │        │
│  │                  │             │                  │        │
│  │ BGP Peer 1 ←──┐  │             │ BGP Peer 3 ←──┐  │        │
│  │ BGP Peer 2 ←──┼──┼─────────────┼ BGP Peer 4 ←──┼──┼────    │
│  └────────────────┘  │             └────────────────┘  │        │
└──────────────────────┼──────────────────────────────────┼────────┘
                       │                                  │
         ┌─────────────┴─────────┐        ┌──────────────┴────────┐
         │  On-Premises US       │        │  On-Premises Europe   │
         │  ASN: 65100           │        │  ASN: 65200           │
         └───────────────────────┘        └───────────────────────┘

2.7 GCP BGP Verification
-------------------------

View Cloud Router Configuration:
gcloud compute routers describe cloud-router-1 \
  --region=us-central1

View BGP Session Status:
gcloud compute routers get-status cloud-router-1 \
  --region=us-central1

Output includes:
- BGP peer status (Established, Active, etc.)
- Advertised routes
- Learned routes
- Route priorities
- BFD status

Example Output:
bgpPeerStatus:
- ipAddress: 169.254.1.1
  name: on-prem-peer
  state: Established
  status: UP
  uptime: 3 days
  advertisedRoutes:
  - destination: 10.0.1.0/24
    priority: 100
  learnedRoutes:
  - destination: 192.168.1.0/24
    nextHop: 169.254.1.1

View Routes in VPC:
gcloud compute routes list \
  --filter="nextHopGateway:cloud-router-1"

Monitor BGP with Cloud Monitoring:
- Metric: router.googleapis.com/bgp/session_up
- Metric: router.googleapis.com/bgp/received_routes
- Metric: router.googleapis.com/bgp/sent_routes
- Metric: router.googleapis.com/bfd/session_up

================================================================================
3. BGP IN AMAZON WEB SERVICES (AWS)
================================================================================

3.1 AWS Virtual Private Gateway (VGW) Overview
-----------------------------------------------

Virtual Private Gateway is AWS's managed BGP speaker for VPN connections.

Key Features:
- Attached to VPC for VPN connectivity
- Supports BGP and static routing
- Automatic route propagation to route tables
- Active/passive tunnel configuration
- Support for multiple VPN connections
- Graceful restart support

VGW Limits:
- 100 BGP advertised routes per VGW
- 1,000 routes learned from BGP
- ASN range: 64512-65534 (16-bit), 4200000000-4294967294 (32-bit)
- Default ASN: 64512 (if not specified)

3.2 AWS Transit Gateway with BGP
---------------------------------

Transit Gateway is AWS's network hub for connecting VPCs, VPN, and Direct
Connect with advanced BGP capabilities.

Key Features:
- Central routing hub for multiple VPCs
- Support for up to 5,000 VPC attachments
- Multiple route tables for segmentation
- BGP support for VPN and Direct Connect
- Equal-cost multi-path (ECMP) routing
- Inter-region peering with BGP

Transit Gateway Advantages over VGW:
+ ECMP support (up to 50 paths)
+ Centralized routing and management
+ Better scalability (more routes)
+ Multiple route tables for segmentation
+ Transit VPC functionality built-in

Transit Gateway Limits:
- 5,000 attachments per TGW
- 10,000 routes per route table
- 50 ECMP paths (VPN/Direct Connect)

3.3 AWS BGP Configuration
--------------------------

Create VPN Connection with BGP (VGW):
aws ec2 create-vpn-connection \
  --type ipsec.1 \
  --customer-gateway-id cgw-xxx \
  --vpn-gateway-id vgw-xxx \
  --options TunnelOptions='[
    {
      "TunnelInsideCidr":"169.254.10.0/30",
      "PreSharedKey":"strongpassword123"
    },
    {
      "TunnelInsideCidr":"169.254.10.4/30",
      "PreSharedKey":"strongpassword456"
    }
  ]'

Create Customer Gateway (On-Premises Router):
aws ec2 create-customer-gateway \
  --type ipsec.1 \
  --public-ip 203.0.113.10 \
  --bgp-asn 65002

Create Transit Gateway VPN Attachment:
aws ec2 create-vpn-connection \
  --type ipsec.1 \
  --customer-gateway-id cgw-xxx \
  --transit-gateway-id tgw-xxx \
  --options '{
    "EnableAcceleration": true,
    "TunnelInsideIpVersion": "ipv4",
    "TunnelOptions": [
      {
        "TunnelInsideCidr": "169.254.10.0/30"
      }
    ]
  }'

3.4 AWS BGP Route Advertisement
--------------------------------

VGW Route Propagation:
- Automatically propagates routes to associated route tables
- Advertises VPC CIDR blocks to on-premises
- Can enable/disable per route table

Enable Route Propagation:
aws ec2 enable-vgw-route-propagation \
  --route-table-id rtb-xxx \
  --gateway-id vgw-xxx

Transit Gateway Route Propagation:
- More flexible than VGW
- Multiple route tables for segmentation
- Can control which attachments propagate to which route tables
- Support for prefix lists

Create TGW Route Table:
aws ec2 create-transit-gateway-route-table \
  --transit-gateway-id tgw-xxx

Associate and Propagate:
aws ec2 associate-transit-gateway-route-table \
  --transit-gateway-route-table-id tgw-rtb-xxx \
  --transit-gateway-attachment-id tgw-attach-xxx

aws ec2 enable-transit-gateway-route-table-propagation \
  --transit-gateway-route-table-id tgw-rtb-xxx \
  --transit-gateway-attachment-id tgw-attach-xxx

3.5 AWS BGP Path Selection and Traffic Engineering
---------------------------------------------------

AWS BGP Route Selection (VGW):
1. Longest prefix match
2. Static routes preferred over BGP
3. Prefer routes with shortest AS_PATH
4. If AS_PATH equal, load balance (not ECMP, active/passive)

AWS BGP Route Selection (Transit Gateway):
1. Longest prefix match
2. Static routes preferred over propagated routes
3. Prefer routes with shortest AS_PATH
4. ECMP across equal paths (up to 50 paths)

Traffic Engineering from On-Premises:

Use AS_PATH Prepending (on on-premises router):
router bgp 65002
  neighbor 169.254.10.1 remote-as 64512
  address-family ipv4
    neighbor 169.254.10.1 route-map PREPEND out

route-map PREPEND permit 10
  set as-path prepend 65002 65002

Use BGP Communities (AWS supports standard communities):
route-map SET-COMMUNITY permit 10
  set community 64512:100

Traffic Engineering to On-Premises:

From AWS side, limited options:
- Use multiple VPN tunnels with Transit Gateway (ECMP)
- Configure static routes with priorities
- Use AS_PATH length (via multiple hops)

3.6 AWS Accelerated Site-to-Site VPN
-------------------------------------

Uses AWS Global Accelerator for improved VPN performance:
- Routes traffic through AWS global network
- Lower latency and jitter
- Better performance for international connections
- Supports BGP
- Higher cost than standard VPN

Enable Accelerated VPN:
aws ec2 create-vpn-connection \
  --type ipsec.1 \
  --customer-gateway-id cgw-xxx \
  --transit-gateway-id tgw-xxx \
  --options EnableAcceleration=true

3.7 AWS Direct Connect with BGP
--------------------------------

Direct Connect uses BGP for all routing:

Virtual Interface Types:
1. Private VIF: Access to VPC (via VGW or Transit Gateway)
2. Public VIF: Access to AWS public services (S3, DynamoDB)
3. Transit VIF: Access to Transit Gateway

Private VIF BGP Configuration:
aws directconnect create-private-virtual-interface \
  --connection-id dxcon-xxx \
  --new-private-virtual-interface \
    virtualInterfaceName=prod-vif,\
    vlan=100,\
    asn=65002,\
    authKey=secretkey123,\
    amazonAddress=169.254.1.1/30,\
    customerAddress=169.254.1.2/30,\
    addressFamily=ipv4,\
    virtualGatewayId=vgw-xxx

Transit VIF (for Transit Gateway):
aws directconnect create-transit-virtual-interface \
  --connection-id dxcon-xxx \
  --new-transit-virtual-interface \
    virtualInterfaceName=tgw-vif,\
    vlan=200,\
    asn=65002,\
    authKey=secretkey123,\
    amazonAddress=169.254.2.1/30,\
    customerAddress=169.254.2.2/30,\
    directConnectGatewayId=dxgw-xxx

Direct Connect Gateway:
- Connects Direct Connect to multiple VGWs or Transit Gateway
- Global resource (not region-specific)
- Allows access to multiple regions from single Direct Connect

3.8 AWS BGP Best Practices
---------------------------

✓ Use Transit Gateway for hub-and-spoke architectures
✓ Enable ECMP with Transit Gateway for high bandwidth
✓ Use BGP communities for route tagging
✓ Configure AS_PATH prepending for failover control
✓ Monitor BGP session state with CloudWatch
✓ Use unique ASNs for different environments
✓ Enable BFD where supported (Direct Connect)
✓ Test failover scenarios (active/passive tunnels)
✓ Document route advertisements and filtering
✓ Use Accelerated VPN for performance-critical VPNs

Common AWS BGP Design (Transit Gateway):
┌────────────────────────────────────────────────────────────────┐
│                    AWS Transit Gateway                         │
│                    ASN: 64512                                  │
│                                                                │
│  ┌─────────────┐  ┌─────────────┐  ┌──────────────┐           │
│  │ VPC 1       │  │ VPC 2       │  │ VPN (BGP)    │           │
│  │ 10.1.0.0/16 │  │ 10.2.0.0/16 │  │ to On-Prem   │           │
│  └─────────────┘  └─────────────┘  └──────────────┘           │
│                                            ↓                   │
└────────────────────────────────────────────┼───────────────────┘
                                             ↓
                                    ┌────────────────┐
                                    │  On-Premises   │
                                    │  ASN: 65002    │
                                    └────────────────┘

3.9 AWS BGP Verification
-------------------------

View VPN Connection Details:
aws ec2 describe-vpn-connections \
  --vpn-connection-ids vpn-xxx

View Transit Gateway Route Table:
aws ec2 describe-transit-gateway-route-tables \
  --transit-gateway-route-table-ids tgw-rtb-xxx

Search Transit Gateway Routes:
aws ec2 search-transit-gateway-routes \
  --transit-gateway-route-table-id tgw-rtb-xxx \
  --filters "Name=type,Values=propagated"

View Direct Connect Virtual Interface:
aws directconnect describe-virtual-interfaces \
  --virtual-interface-id dxvif-xxx

CloudWatch Metrics for BGP:
- VPN: TunnelState (UP/DOWN)
- Direct Connect: ConnectionState, VirtualInterfaceState
- Transit Gateway: BytesIn, BytesOut per attachment

================================================================================
4. BGP IN MICROSOFT AZURE
================================================================================

4.1 Azure Virtual Network Gateway Overview
-------------------------------------------

Virtual Network Gateway provides VPN connectivity with BGP support.

Gateway Types:
1. VPN Gateway: IPsec/IKE VPN with BGP
2. ExpressRoute Gateway: Dedicated connection with BGP

VPN Gateway SKUs with BGP:
- VpnGw1-5: Standard performance tiers (all support BGP)
- VpnGw1AZ-5AZ: Zone-redundant (all support BGP)
- Basic: Does NOT support BGP

Key Features:
- Active-active gateway configuration
- BGP over IPsec
- Route-based VPN (required for BGP)
- Support for multiple on-premises sites
- Integration with Azure Route Server

VPN Gateway Limits:
- 4,000 routes learned via BGP
- 30 tunnels per gateway (VpnGw3+)
- ASN range: 1-65534 (excluding reserved ASNs)

4.2 Azure Route Server
----------------------

Azure Route Server enables dynamic routing in Azure VNet:

Key Features:
- Fully managed BGP route server
- Enables BGP between NVAs and Azure
- Supports route exchange between on-premises and NVAs
- No need for route tables (dynamic routing)
- High availability (deployed in pair)

Use Cases:
- SD-WAN integration (Cisco Viptela, VMware VeloCloud)
- Network Virtual Appliances (firewalls, routers)
- Dynamic routing without manual route tables

Azure Route Server Capabilities:
- Learns routes from NVAs via BGP
- Advertises routes to NVAs
- Propagates routes between NVAs
- Integrates with VPN Gateway and ExpressRoute

4.3 Azure BGP Configuration
----------------------------

Create VPN Gateway with BGP:
az network vnet-gateway create \
  --name vpn-gateway-1 \
  --resource-group prod-rg \
  --location eastus \
  --vnet prod-vnet \
  --gateway-type Vpn \
  --vpn-type RouteBased \
  --sku VpnGw2 \
  --asn 65515 \
  --bgp-peering-address 10.0.0.254

Create Local Network Gateway (On-Premises):
az network local-gateway create \
  --name on-prem-gateway \
  --resource-group prod-rg \
  --gateway-ip-address 203.0.113.10 \
  --asn 65002 \
  --bgp-peering-address 192.168.1.1

Create VPN Connection with BGP:
az network vpn-connection create \
  --name vpn-connection-1 \
  --resource-group prod-rg \
  --vnet-gateway1 vpn-gateway-1 \
  --local-gateway2 on-prem-gateway \
  --shared-key "strongpassword123" \
  --enable-bgp

Create Azure Route Server:
az network routeserver create \
  --name route-server-1 \
  --resource-group prod-rg \
  --hosted-subnet /subscriptions/.../subnets/RouteServerSubnet \
  --location eastus

Create BGP Peering (Route Server to NVA):
az network routeserver peering create \
  --name nva-peer \
  --routeserver route-server-1 \
  --resource-group prod-rg \
  --peer-asn 65001 \
  --peer-ip 10.0.1.10

4.4 Azure BGP Route Advertisement
----------------------------------

VPN Gateway Route Advertisement:
- Automatically advertises VNet address space
- Advertises connected VNets (via VNet peering with gateway transit)
- Does NOT advertise custom routes by default

Enable Custom Route Advertisement:
# Custom routes can be added to VNet route tables
# Gateway will advertise these if "Virtual network gateway route propagation"
# is enabled

Azure Route Server Advertisement:
- Advertises routes learned from NVAs to VPN Gateway/ExpressRoute
- Advertises VNet routes to NVAs
- Enables transit routing through NVAs

4.5 Azure ExpressRoute with BGP
--------------------------------

ExpressRoute uses BGP for all routing:

Peering Types:
1. Private Peering: Access to VNets (required)
2. Microsoft Peering: Access to Microsoft 365, Azure public services

Private Peering BGP:
- Two BGP sessions (primary and secondary links)
- Active-active configuration
- /30 subnets for BGP peering
- MD5 authentication supported

Create ExpressRoute Circuit:
az network express-route create \
  --name expressroute-1 \
  --resource-group prod-rg \
  --location eastus \
  --provider "Equinix" \
  --peering-location "Silicon Valley" \
  --bandwidth 1000 \
  --sku-family MeteredData \
  --sku-tier Standard

Configure Private Peering:
az network express-route peering create \
  --circuit-name expressroute-1 \
  --resource-group prod-rg \
  --peering-type AzurePrivatePeering \
  --vlan-id 100 \
  --peer-asn 65002 \
  --primary-peer-subnet 192.168.1.0/30 \
  --secondary-peer-subnet 192.168.1.4/30

ExpressRoute Global Reach:
- Connects on-premises sites via Azure ExpressRoute
- Uses BGP to exchange routes
- Enables private connectivity between sites

Enable Global Reach:
az network express-route peering connection create \
  --name global-reach-connection \
  --resource-group prod-rg \
  --circuit-name expressroute-1 \
  --peering-name AzurePrivatePeering \
  --peer-circuit /subscriptions/.../expressRouteCircuits/expressroute-2 \
  --address-prefix 10.255.0.0/29

4.6 Azure BGP Path Selection and Traffic Engineering
-----------------------------------------------------

Azure BGP Route Selection:
1. Longest prefix match
2. System routes preferred over BGP routes
3. ExpressRoute preferred over VPN (higher weight)
4. AS_PATH length (shorter preferred)
5. BGP metric/MED

Traffic Engineering from On-Premises:

Use AS_PATH Prepending:
router bgp 65002
  neighbor 192.168.1.1 remote-as 65515
  address-family ipv4
    neighbor 192.168.1.1 route-map PREPEND out

route-map PREPEND permit 10
  set as-path prepend 65002 65002

Use BGP Communities:
- Azure supports BGP communities
- Can tag routes for control

Traffic Engineering from Azure:

Connection Weight:
- VPN connections have configurable weight
- Higher weight = preferred path
- Default: VPN = 0, ExpressRoute = 0

Set Connection Weight:
az network vpn-connection update \
  --name vpn-connection-1 \
  --resource-group prod-rg \
  --routing-weight 100

4.7 Azure Virtual WAN with BGP
-------------------------------

Virtual WAN provides global transit architecture with BGP:

Key Features:
- Hub-and-spoke with multiple hubs
- BGP support for VPN and ExpressRoute
- Route tables for segmentation
- Integration with SD-WAN (Cisco, VMware, etc.)
- Automatic routing between hubs

Virtual WAN BGP Peering:
- VPN sites can use BGP
- ExpressRoute circuits use BGP
- NVAs in spoke VNets can peer via Route Server

Create Virtual WAN:
az network vwan create \
  --name global-wan \
  --resource-group prod-rg \
  --location eastus \
  --type Standard

Create Virtual Hub:
az network vhub create \
  --name hub-eastus \
  --resource-group prod-rg \
  --vwan global-wan \
  --location eastus \
  --address-prefix 10.100.0.0/24

Create VPN Gateway in Hub:
az network vpn-gateway create \
  --name vpn-gateway-hub \
  --resource-group prod-rg \
  --vhub hub-eastus \
  --location eastus \
  --scale-unit 1

4.8 Azure BGP Best Practices
-----------------------------

✓ Use VpnGw2 or higher SKU for production (better performance)
✓ Enable active-active gateway configuration
✓ Use zone-redundant gateways (AZ SKUs) for HA
✓ Configure BGP for dynamic routing (avoid static routes)
✓ Use Azure Route Server for NVA integration
✓ Document ASN assignments (avoid conflicts)
✓ Use ExpressRoute for high-bandwidth, low-latency
✓ Configure connection weights for traffic engineering
✓ Monitor BGP via Azure Monitor
✓ Use Virtual WAN for global hub-and-spoke

Common Azure BGP Design (Hub-and-Spoke with Route Server):
┌────────────────────────────────────────────────────────────────┐
│                    Hub VNet (10.0.0.0/16)                      │
│                                                                │
│  ┌──────────────────┐         ┌──────────────────┐            │
│  │ VPN Gateway      │         │ Azure Route      │            │
│  │ ASN: 65515       │←─ BGP ─→│ Server           │            │
│  │                  │         │                  │            │
│  └────────┬─────────┘         └────────┬─────────┘            │
│           │                            │                      │
│           ↓                            ↓                      │
│  ┌────────────────────────────────────────────────┐           │
│  │            VNet Peering (Gateway Transit)      │           │
│  └────────────────────────────────────────────────┘           │
│           ↓                            ↓                      │
│  ┌────────────────┐         ┌──────────────────┐             │
│  │ Spoke VNet 1   │         │ Spoke VNet 2     │             │
│  │ 10.1.0.0/16    │         │ 10.2.0.0/16      │             │
│  └────────────────┘         └──────────────────┘             │
└────────────────────────────────────────────────────────────────┘
           ↓
    ┌──────────────┐
    │ On-Premises  │
    │ ASN: 65002   │
    └──────────────┘

4.9 Azure BGP Verification
---------------------------

View VPN Gateway BGP Configuration:
az network vnet-gateway show \
  --name vpn-gateway-1 \
  --resource-group prod-rg \
  --query 'bgpSettings'

View Learned Routes:
az network vnet-gateway list-learned-routes \
  --name vpn-gateway-1 \
  --resource-group prod-rg

View Advertised Routes:
az network vnet-gateway list-advertised-routes \
  --name vpn-gateway-1 \
  --resource-group prod-rg \
  --peer 192.168.1.1

View Route Server Peering:
az network routeserver peering show \
  --name nva-peer \
  --routeserver route-server-1 \
  --resource-group prod-rg

View Route Server Learned Routes:
az network routeserver peering list-learned-routes \
  --name nva-peer \
  --routeserver route-server-1 \
  --resource-group prod-rg

Azure Monitor Metrics:
- BGP Peer Status
- Routes Advertised
- Routes Learned
- Gateway Bandwidth
- Tunnel Bandwidth

================================================================================
5. CROSS-PLATFORM BGP COMPARISON
================================================================================

5.1 Feature Comparison
----------------------

┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Feature            │ GCP Cloud Router │ AWS TGW/VGW     │ Azure VPN GW   │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ BGP Implementation │ Managed service  │ Managed service │ Managed service│
│ Private ASN        │ Yes              │ Yes             │ Yes            │
│ Public ASN         │ No               │ Yes (customer)  │ Yes (customer) │
│ BFD Support        │ Yes              │ Yes (DX)        │ No             │
│ ECMP               │ Yes              │ Yes (TGW only)  │ No (active-    │
│                    │                  │                 │ active only)   │
│ IPv6 Support       │ Yes              │ Yes             │ Yes            │
│ Route Limit        │ 1M (soft)        │ 10K (TGW)       │ 4K             │
│ Custom Routes      │ Yes (200)        │ Yes (static)    │ Limited        │
│ Route Priority     │ Yes (0-65535)    │ No (AS_PATH)    │ Yes (weight)   │
│ MED Support        │ Yes              │ Yes             │ Yes            │
│ Communities        │ Limited          │ Yes             │ Yes            │
│ Graceful Restart   │ Yes              │ Yes             │ Yes            │
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

5.2 ASN Assignment Comparison
------------------------------

GCP:
- Cloud Router ASN: Private ASN (64512-65534, 4200000000-4294967294)
- Cannot use 64512 (reserved)
- Recommendation: Use unique ASN per region

AWS:
- VGW/TGW ASN: Private ASN (default 64512) or custom
- Customer Gateway: Any ASN (public or private)
- Recommendation: Use 64512 for AWS, unique ASN for on-premises

Azure:
- VPN Gateway ASN: Default 65515 or custom (1-65534)
- ExpressRoute: Uses Microsoft ASN 12076 (public)
- Recommendation: Use 65515 for Azure, unique ASN for on-premises

5.3 Traffic Engineering Comparison
-----------------------------------

GCP:
✓ Route priority (most flexible)
✓ MED for inbound control
✓ AS_PATH prepending (customer side)
✓ Custom route advertisements

AWS:
✓ AS_PATH prepending (customer side)
✓ ECMP with Transit Gateway
✓ Static routes with priorities
✓ BGP communities

Azure:
✓ Connection weight
✓ AS_PATH prepending (customer side)
✓ ExpressRoute preferred over VPN
✓ Route Server for advanced scenarios

5.4 High Availability Comparison
---------------------------------

GCP HA VPN:
- 99.99% SLA (4 tunnels recommended)
- Active-active with ECMP
- BFD for fast failover
- Multiple Cloud Routers per region

AWS:
- 99.95% SLA (VPN)
- Active-passive tunnels (VGW)
- Active-active with ECMP (Transit Gateway)
- Multiple Availability Zones

Azure:
- 99.95% SLA (VPN Gateway)
- Active-active gateway configuration
- Zone-redundant gateways (AZ SKUs)
- ExpressRoute with dual circuits

5.5 Use Case Recommendations
-----------------------------

Choose GCP Cloud Router when:
✓ Need global VPC with regional BGP peering
✓ Require granular route priority control
✓ Want simplified multi-region routing
✓ BFD for fast failover is critical

Choose AWS Transit Gateway when:
✓ Need hub-and-spoke with many VPCs
✓ Require ECMP for high bandwidth
✓ Want centralized routing management
✓ Need advanced route table segmentation

Choose Azure VPN Gateway when:
✓ Microsoft-centric environment
✓ Integration with Azure Route Server
✓ Need SD-WAN integration
✓ ExpressRoute for primary, VPN for backup

================================================================================
6. MULTI-CLOUD BGP DESIGN PATTERNS
================================================================================

6.1 Pattern 1: Single Cloud with On-Premises
---------------------------------------------

Scenario: On-premises data center connected to one cloud provider

Design:
On-Premises ←─ BGP ─→ Cloud Provider
ASN: 65100         ASN: 65001 (GCP/AWS/Azure)

Best Practices:
✓ Use dedicated connection (Interconnect/Direct Connect/ExpressRoute)
✓ Configure redundant paths (dual circuits)
✓ Enable BFD where supported
✓ Use private ASNs
✓ Document route advertisements

6.2 Pattern 2: Multi-Cloud with On-Premises Hub
------------------------------------------------

Scenario: Multiple cloud providers, on-premises as routing hub

Design:
      GCP ←─ BGP ─→ On-Premises ←─ BGP ─→ AWS
    ASN: 65001       ASN: 65100      ASN: 65002
                           │
                           ├─ BGP ─→ Azure
                                    ASN: 65003

Considerations:
- On-premises router controls inter-cloud routing
- Use AS_PATH prepending to prevent transit routing
- Configure route filters (prevent cloud-to-cloud via on-premises)
- Higher complexity and single point of failure

6.3 Pattern 3: Cloud-to-Cloud Direct BGP
-----------------------------------------

Scenario: Direct BGP peering between cloud providers

Options:
1. GCP and AWS: Partner Interconnect or VPN with BGP
2. GCP and Azure: VPN with BGP
3. AWS and Azure: VPN with BGP or Direct Connect via Equinix

Design Considerations:
✓ Use VPN for lower bandwidth requirements
✓ Use dedicated connections for high bandwidth
✓ Configure appropriate route filtering
✓ Monitor cross-cloud traffic patterns
✓ Consider latency and cost implications

6.4 Pattern 4: SD-WAN as Multi-Cloud Hub
-----------------------------------------

Scenario: SD-WAN controller manages BGP to all cloud providers

Design:
    GCP ←─ BGP ─→ SD-WAN Controller ←─ BGP ─→ AWS
                         │
                         ├─ BGP ─→ Azure
                         │
                         └─ BGP ─→ On-Premises

Advantages:
+ Centralized routing policy
+ Cloud-agnostic design
+ Application-aware routing
+ Built-in failover and optimization

Popular SD-WAN Solutions:
- Cisco Viptela (integrates with all three clouds)
- VMware VeloCloud (SD-WAN by Broadcom)
- Silver Peak (HPE Aruba EdgeConnect)

================================================================================
7. BGP TROUBLESHOOTING IN CLOUD
================================================================================

7.1 Common BGP Issues
---------------------

Issue: BGP Session Not Establishing

GCP:
- Verify Cloud Router and peer configuration
- Check VPN tunnel status or VLAN attachment
- Verify ASNs are different
- Check peer IP reachability
- Review firewall rules (allow BGP port 179)

AWS:
- Verify VPN tunnel status
- Check Customer Gateway configuration
- Verify ASNs match configuration
- Check route propagation enabled
- Review security groups and NACLs

Azure:
- Verify VPN Gateway status
- Check Local Network Gateway configuration
- Verify connection is established
- Check BGP peering addresses
- Review NSG rules

Issue: Routes Not Being Learned

GCP:
gcloud compute routers get-status cloud-router-1 \
  --region=us-central1
# Check learnedRoutes section

AWS:
aws ec2 describe-vpn-connections \
  --vpn-connection-ids vpn-xxx
# Check bgpStatus

Azure:
az network vnet-gateway list-learned-routes \
  --name vpn-gateway-1 \
  --resource-group prod-rg

Common Causes:
- Route filtering on customer router
- Maximum route limits exceeded
- BGP session not fully established
- Routes not advertised by peer

Issue: Asymmetric Routing

Symptoms:
- Traffic flows one direction but not return
- Connection timeouts
- Partial connectivity

Troubleshooting:
1. Verify routes in both directions
2. Check return path advertisements
3. Review firewall rules in both directions
4. Verify NAT configurations
5. Check route priorities/weights

7.2 BGP Monitoring and Alerting
--------------------------------

GCP Cloud Monitoring:
- router.googleapis.com/bgp/session_up
- router.googleapis.com/bgp/received_routes
- router.googleapis.com/bgp/sent_routes
- router.googleapis.com/bfd/session_up

Create Alert:
gcloud alpha monitoring policies create \
  --notification-channels=CHANNEL_ID \
  --display-name="BGP Session Down" \
  --condition-display-name="BGP Status" \
  --condition-threshold-value=0 \
  --condition-metric-type=router.googleapis.com/bgp/session_up

AWS CloudWatch:
- TunnelState (VPN)
- VirtualInterfaceBpsEgress (Direct Connect)
- VirtualInterfaceBpsIngress (Direct Connect)

Azure Monitor:
- BGPPeerStatus
- BGPRoutesCount
- TunnelAverageBandwidth
- TunnelEgressBytes

7.3 BGP Debugging Best Practices
---------------------------------

✓ Verify BGP basics first (ASN, IP addresses, authentication)
✓ Check physical/tunnel connectivity before BGP troubleshooting
✓ Use looking glasses to verify route advertisements
✓ Document expected routes (advertised and learned)
✓ Test failover scenarios in non-production first
✓ Keep BGP configurations simple
✓ Use consistent ASN scheme across environment
✓ Monitor BGP session state continuously

================================================================================
8. BGP SECURITY IN CLOUD
================================================================================

8.1 BGP Security Concerns
--------------------------

Threats:
- Route hijacking (advertising routes you don't own)
- Route leaks (accidentally advertising transit routes)
- AS_PATH manipulation
- BGP session hijacking
- Denial of Service (BGP updates flooding)

Cloud-Specific Considerations:
- Less control over BGP implementation
- Cannot implement RPKI validation directly
- Limited BGP authentication options
- Shared responsibility model

8.2 BGP Security Best Practices
--------------------------------

Authentication:
GCP:
- MD5 authentication on Cloud Router peers
- Set during peer creation or update

AWS:
- BGP authentication key on VPN connection
- Specified during VPN creation

Azure:
- MD5 authentication supported on ExpressRoute
- Configured with service provider

Route Filtering:
✓ Advertise only your own prefixes
✓ Use prefix lists on customer routers
✓ Filter RFC 1918 if not needed
✓ Reject default route unless explicitly needed
✓ Use AS_PATH filters to prevent route leaks

Maximum Prefix Limits:
✓ Configure on customer router to prevent route table overflow
✓ Cloud providers have built-in limits
✓ Monitor route counts

Example (Cisco):
router bgp 65002
  neighbor 169.254.1.1 remote-as 65001
  neighbor 169.254.1.1 maximum-prefix 1000 80

AS_PATH Filtering:
✓ Accept only expected AS_PATH patterns
✓ Prevent AS_PATH loops
✓ Filter suspicious paths

Example (Cisco):
ip as-path access-list 10 permit ^65001$
router bgp 65002
  neighbor 169.254.1.1 filter-list 10 in

8.3 Monitoring for BGP Security
--------------------------------

Monitor for Anomalies:
✓ Unexpected route advertisements
✓ Sudden increase in route count
✓ BGP session flapping
✓ Routes with abnormal AS_PATH
✓ Changes in route attributes

Logging:
- Enable BGP logging on customer routers
- Send logs to SIEM for analysis
- Alert on BGP session state changes
- Track route additions/deletions

================================================================================
REFERENCES AND DOCUMENTATION
================================================================================

1. Google Cloud Platform
   - Cloud Router Documentation
     https://cloud.google.com/network-connectivity/docs/router
   - Cloud Router BGP Configuration
     https://cloud.google.com/network-connectivity/docs/router/how-to/
   - Cloud VPN with Cloud Router
     https://cloud.google.com/network-connectivity/docs/vpn/how-to/
   - Cloud Interconnect BGP
     https://cloud.google.com/network-connectivity/docs/interconnect/

2. Amazon Web Services
   - Site-to-Site VPN Documentation
     https://docs.aws.amazon.com/vpn/
   - Transit Gateway Documentation
     https://docs.aws.amazon.com/vpc/latest/tgw/
   - Direct Connect Documentation
     https://docs.aws.amazon.com/directconnect/
   - VPN Routing Options
     https://docs.aws.amazon.com/vpn/latest/s2svpn/VPNRoutingTypes.html

3. Microsoft Azure
   - VPN Gateway Documentation
     https://docs.microsoft.com/azure/vpn-gateway/
   - ExpressRoute Documentation
     https://docs.microsoft.com/azure/expressroute/
   - Azure Route Server
     https://docs.microsoft.com/azure/route-server/
   - Virtual WAN Documentation
     https://docs.microsoft.com/azure/virtual-wan/

4. BGP Protocol Standards
   - RFC 4271: A Border Gateway Protocol 4 (BGP-4)
   - RFC 4760: Multiprotocol Extensions for BGP-4
   - RFC 5082: Generalized TTL Security Mechanism (GTSM)
   - RFC 5880: Bidirectional Forwarding Detection (BFD)
   - RFC 2385: Protection of BGP Sessions via TCP MD5

5. Books
   - "BGP Design and Implementation" by Randy Zhang (Cisco Press)
   - "Internet Routing Architectures" by Sam Halabi (Cisco Press)
   - "BGP in the Data Center" by Dinesh Dutt (O'Reilly)

6. Training and Certification
   - Google Cloud Professional Cloud Network Engineer
   - AWS Certified Advanced Networking - Specialty
   - Microsoft Certified: Azure Network Engineer Associate

================================================================================
BGP CONFIGURATION CHECKLIST
================================================================================

☐ Planning
  ☐ Design BGP topology (hub-and-spoke, mesh, etc.)
  ☐ Assign ASNs (avoid conflicts, use private ASNs)
  ☐ Plan IP addressing for BGP peering
  ☐ Document route advertisements (what to advertise)
  ☐ Plan route filtering and policies
  ☐ Define failover and redundancy requirements

☐ GCP Cloud Router Configuration
  ☐ Create Cloud Router with appropriate ASN
  ☐ Create VPN tunnels or VLAN attachments
  ☐ Configure BGP peers
  ☐ Set advertisement mode (DEFAULT or CUSTOM)
  ☐ Configure route priorities for traffic engineering
  ☐ Enable BFD for fast failover
  ☐ Verify BGP session status
  ☐ Test route learning and advertisement

☐ AWS Configuration
  ☐ Create Customer Gateway
  ☐ Create Virtual Private Gateway or Transit Gateway
  ☐ Create VPN Connection with BGP
  ☐ Enable route propagation
  ☐ Configure Transit Gateway route tables (if using TGW)
  ☐ Verify BGP session status
  ☐ Test ECMP (if using Transit Gateway)

☐ Azure Configuration
  ☐ Create VPN Gateway (VpnGw1+ SKU)
  ☐ Create Local Network Gateway
  ☐ Create VPN Connection with BGP enabled
  ☐ Configure Azure Route Server (if using NVAs)
  ☐ Set connection weights for traffic engineering
  ☐ Verify BGP session status
  ☐ Test active-active configuration

☐ On-Premises Router Configuration
  ☐ Configure BGP with cloud provider ASN
  ☐ Set up MD5 authentication
  ☐ Configure route filtering (prefix lists, AS_PATH filters)
  ☐ Set maximum prefix limits
  ☐ Configure route maps for traffic engineering
  ☐ Enable BFD (if supported)
  ☐ Test failover scenarios

☐ Monitoring and Operations
  ☐ Set up BGP session monitoring
  ☐ Configure alerts for session down
  ☐ Monitor route counts
  ☐ Track route changes
  ☐ Document BGP configuration
  ☐ Create troubleshooting runbook
  ☐ Schedule regular BGP reviews

☐ Security
  ☐ Enable BGP authentication
  ☐ Configure route filtering (inbound and outbound)
  ☐ Set maximum prefix limits
  ☐ Monitor for unexpected routes
  ☐ Log BGP events
  ☐ Review BGP security regularly

================================================================================
END OF DOCUMENT
================================================================================
