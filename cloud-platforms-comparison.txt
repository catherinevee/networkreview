================================================================================
                    CLOUD PLATFORMS COMPARISON:
                    GCP, AWS, AND AZURE NETWORKING
================================================================================

This document provides a comprehensive comparison of networking capabilities,
features, and best practices across the three major cloud platforms: Google
Cloud Platform (GCP), Amazon Web Services (AWS), and Microsoft Azure.

================================================================================
1. PLATFORM OVERVIEW
================================================================================

1.1 Market Position and Philosophy
-----------------------------------

Google Cloud Platform (GCP):
- Founded: 2008 (App Engine), fully launched 2011
- Market share: ~10% (third place)
- Philosophy: Innovation, data analytics, machine learning focus
- Strength: Global network infrastructure, BigQuery, Kubernetes (GKE)
- Primary customers: Tech companies, startups, data-heavy workloads

Amazon Web Services (AWS):
- Founded: 2006
- Market share: ~32% (market leader)
- Philosophy: Comprehensive service catalog, innovation leadership
- Strength: Breadth of services, mature ecosystem, global reach
- Primary customers: Enterprises, startups, all industries

Microsoft Azure:
- Founded: 2010
- Market share: ~23% (second place)
- Philosophy: Enterprise integration, hybrid cloud focus
- Strength: Windows/Active Directory integration, hybrid capabilities
- Primary customers: Enterprises (especially Microsoft shops), government

1.2 Global Infrastructure
--------------------------

GCP:
- Regions: 39+ (as of 2024)
- Availability Zones: 118+
- Points of Presence (PoPs): 187+
- Network: Premium Tier uses Google's global network
- Unique: Single global VPC spans all regions

AWS:
- Regions: 33+ (as of 2024)
- Availability Zones: 105+
- Local Zones: 32+ (metro extensions)
- Edge Locations: 600+
- Network: Global backbone with regional routing

Azure:
- Regions: 60+ (as of 2024)
- Availability Zones: 100+
- Edge Locations: 200+
- Network: Global WAN with regional peering
- Unique: Most regions of any cloud provider

================================================================================
2. VIRTUAL NETWORKING COMPARISON
================================================================================

2.1 Virtual Networks (VPC/VNet)
--------------------------------

┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Feature            │ GCP (VPC)        │ AWS (VPC)       │ Azure (VNet)   │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ Scope              │ Global           │ Regional        │ Regional       │
│ Subnets            │ Regional         │ Zonal (AZ)      │ Regional       │
│ Default CIDR       │ Custom only      │ Custom or       │ Custom or      │
│                    │                  │ Default VPC     │ Default VNet   │
│ Max VPCs/Account   │ 15 (quotable)    │ 5 (quotable)    │ 1000/region    │
│ Cross-region       │ Native (1 VPC)   │ VPC Peering/TGW │ VNet Peering   │
│ IP Address Range   │ RFC 1918 + more  │ RFC 1918 + more │ RFC 1918 + more│
│ Reserved IPs       │ 4 per subnet     │ 5 per subnet    │ 5 per subnet   │
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

GCP VPC:
- Global resource spanning all regions
- Subnets are regional (can span multiple zones)
- Single VPC can have subnets in all regions
- Routes are global (automatically propagated)
- Firewall rules are global

Example:
gcloud compute networks create prod-vpc --subnet-mode=custom
gcloud compute networks subnets create us-subnet \
  --network=prod-vpc --region=us-central1 --range=10.1.0.0/24
gcloud compute networks subnets create eu-subnet \
  --network=prod-vpc --region=europe-west1 --range=10.2.0.0/24

AWS VPC:
- Regional resource
- Subnets are tied to specific Availability Zones
- Must create separate VPCs per region
- Route tables are regional
- Security groups are regional

Example:
aws ec2 create-vpc --cidr-block 10.0.0.0/16 --region us-east-1
aws ec2 create-subnet --vpc-id vpc-xxx \
  --cidr-block 10.0.1.0/24 --availability-zone us-east-1a
aws ec2 create-subnet --vpc-id vpc-xxx \
  --cidr-block 10.0.2.0/24 --availability-zone us-east-1b

Azure VNet:
- Regional resource
- Subnets are regional (span all zones in region)
- Must create separate VNets per region
- Route tables per subnet or VNet
- Network Security Groups (NSGs) per subnet or NIC

Example:
az network vnet create --name prod-vnet \
  --resource-group prod-rg \
  --location eastus \
  --address-prefix 10.0.0.0/16

az network vnet subnet create --name web-subnet \
  --vnet-name prod-vnet \
  --resource-group prod-rg \
  --address-prefix 10.0.1.0/24

Key Differences:
- GCP: One global VPC simplifies multi-region deployments
- AWS: Regional VPCs provide isolation but require peering/TGW
- Azure: Regional VNets with extensive peering options

2.2 Subnet Design
------------------

GCP Subnets:
- Regional resource
- Can expand CIDR without downtime
- Cannot shrink once created
- Supports secondary IP ranges (for pods, services in GKE)
- Private Google Access per subnet

AWS Subnets:
- Zonal resource (tied to single AZ)
- Cannot modify CIDR after creation
- 5 reserved IPs per subnet
- Public vs Private distinction
- Must enable auto-assign public IP

Azure Subnets:
- Regional resource (span all AZs in region)
- Can add address ranges
- 5 reserved IPs per subnet
- Can delegate to services (App Service, AKS)
- Service endpoints per subnet

Best Practice Comparison:
┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Aspect             │ GCP              │ AWS             │ Azure          │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ IP Planning        │ Plan for growth  │ Plan carefully  │ Plan for growth│
│ Multi-AZ           │ Automatic (1     │ Create subnet   │ Automatic (1   │
│                    │ subnet, all AZs) │ per AZ          │ subnet, all AZs│
│ Expansion          │ Easy (expand)    │ Difficult (new  │ Moderate (add  │
│                    │                  │ subnet needed)  │ ranges)        │
│ Micro-segmentation │ Firewall rules   │ Security Groups │ NSGs           │
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

2.3 IP Addressing
------------------

GCP:
- Internal IP: Automatically assigned from subnet range
- External IP: Ephemeral or reserved (static)
- Alias IP ranges: Secondary IPs for containers
- Private Google Access: Access Google APIs without external IP

AWS:
- Private IP: Assigned from VPC CIDR
- Public IP: Auto-assigned (if enabled) or Elastic IP (static)
- Secondary IPs: Additional private IPs per ENI
- IPv6: Full dual-stack support

Azure:
- Private IP: Dynamic or static from VNet
- Public IP: Dynamic or static IP resource
- Multiple IPs: Per NIC or via multiple NICs
- IPv6: Dual-stack support

Reserved IP Addresses:

GCP (10.0.0.0/24):
- 10.0.0.0: Network
- 10.0.0.1: Default gateway
- 10.0.0.254: Reserved
- 10.0.0.255: Broadcast

AWS (10.0.0.0/24):
- 10.0.0.0: Network
- 10.0.0.1: VPC router
- 10.0.0.2: DNS server
- 10.0.0.3: Future use
- 10.0.0.255: Broadcast

Azure (10.0.0.0/24):
- 10.0.0.0: Network
- 10.0.0.1: Default gateway
- 10.0.0.2: Azure DNS
- 10.0.0.3: Azure DNS
- 10.0.0.255: Broadcast

================================================================================
3. NETWORK CONNECTIVITY
================================================================================

3.1 VPC/VNet Peering
--------------------

┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Feature            │ GCP              │ AWS             │ Azure          │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ Same Region        │ Yes              │ Yes             │ Yes            │
│ Cross-Region       │ Yes (global)     │ Yes             │ Yes (global)   │
│ Cross-Account      │ Yes              │ Yes             │ Yes (cross-    │
│                    │                  │                 │ subscription)  │
│ Transitive Routing │ No               │ No (use TGW)    │ No (use vWAN)  │
│ Max Peerings       │ 25 per VPC       │ 125 per VPC     │ 500 per VNet   │
│ Bandwidth Limits   │ None             │ None            │ None           │
│ Latency            │ Low (Google net) │ Low (AWS net)   │ Low (MS net)   │
│ Cost               │ Standard egress  │ Data transfer   │ Ingress free,  │
│                    │                  │ charges         │ egress charged │
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

GCP VPC Peering:
- Connects two VPC networks
- Private RFC 1918 communication
- Supports cross-project and cross-organization
- Does not support transitive peering
- No overlapping CIDR allowed

Example:
gcloud compute networks peerings create peer-to-prod \
  --network=dev-vpc \
  --peer-project=prod-project \
  --peer-network=prod-vpc

AWS VPC Peering:
- Connects two VPCs (same or different regions)
- Supports cross-account peering
- Does not support transitive routing
- Can peer across regions (inter-region VPC peering)
- No overlapping CIDR allowed

Example:
aws ec2 create-vpc-peering-connection \
  --vpc-id vpc-11111111 \
  --peer-vpc-id vpc-22222222 \
  --peer-region us-west-2

Azure VNet Peering:
- Global VNet peering (any region)
- Low latency using Microsoft backbone
- Supports cross-subscription peering
- Virtual network gateway transit
- Can use remote gateways

Example:
az network vnet peering create \
  --name peer-to-prod \
  --resource-group dev-rg \
  --vnet-name dev-vnet \
  --remote-vnet /subscriptions/.../prod-vnet \
  --allow-vnet-access

3.2 Hub-and-Spoke Architectures
--------------------------------

GCP - Shared VPC:
- Host project contains shared VPC
- Service projects use subnets from host project
- Centralized network administration
- Best for organizations using Google Cloud

AWS - Transit Gateway:
- Central hub for VPC connectivity
- Supports up to 5,000 VPCs
- Inter-region peering supported
- Route table per attachment
- Best for large AWS deployments

Azure - Virtual WAN:
- Global transit network architecture
- Hub-and-spoke with multiple hubs
- Integrates VPN, ExpressRoute, SD-WAN
- Built-in security (Azure Firewall)
- Best for hybrid and multi-region

Comparison:

GCP Shared VPC:
+ Simplest to manage (single VPC)
+ No additional cost
+ Global by default
- Limited to single organization
- No cross-VPC routing (use peering)

AWS Transit Gateway:
+ Highly scalable (5,000 VPCs)
+ Flexible routing policies
+ Multi-region support
- Additional cost ($0.05/hour per attachment)
- Complex routing configuration

Azure Virtual WAN:
+ Integrated security and routing
+ Best for hybrid cloud
+ Multiple hub regions
- Higher cost
- More complex setup

3.3 VPN Connectivity
--------------------

┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Feature            │ GCP Cloud VPN    │ AWS VPN         │ Azure VPN      │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ HA VPN SLA         │ 99.99%           │ 99.95%          │ 99.95%         │
│ Max Throughput     │ 3 Gbps/tunnel    │ 1.25 Gbps/tunnel│ 1-10 Gbps      │
│ Tunnels per GW     │ 2-8              │ 2 per connection│ 30+ (VpnGw3)   │
│ Routing            │ BGP (dynamic)    │ BGP or static   │ BGP or static  │
│ Redundancy         │ Active/Active    │ Active/Standby  │ Active/Active  │
│ Encryption         │ IKEv2, AES-GCM   │ IKEv1/v2, AES   │ IKEv1/v2, AES  │
│ Cost (approx)      │ $0.05/hr + data  │ $0.05/hr + data │ Gateway-based  │
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

GCP Cloud VPN:
- HA VPN (recommended): 99.99% SLA, two interfaces
- Classic VPN (legacy): 99.9% SLA, single interface
- Supports BGP with Cloud Router
- Up to 3 Gbps per tunnel
- Multiple tunnels for higher bandwidth

AWS VPN:
- Site-to-Site VPN: IPsec VPN to VPC
- AWS VPN CloudHub: Hub-and-spoke for multiple sites
- Transit Gateway VPN: Centralized VPN hub
- Accelerated VPN: Uses Global Accelerator for performance
- 1.25 Gbps per tunnel (can use multiple tunnels)

Azure VPN Gateway:
- VPN Gateway SKUs: Basic, VpnGw1-5, VpnGw1AZ-5AZ
- Zone-redundant gateways (AZ SKUs)
- Active-Active configuration supported
- Up to 10 Gbps (VpnGw5)
- Point-to-Site VPN for client access

Best Practice Recommendations:

For High Availability:
- GCP: HA VPN with 4 tunnels (2 on-prem devices)
- AWS: Multiple VPN connections to Transit Gateway
- Azure: Zone-redundant VPN Gateway (AZ SKU)

For Performance:
- GCP: Multiple tunnels, ECMP load balancing
- AWS: Multiple tunnels, consider Accelerated VPN
- Azure: Higher SKU (VpnGw4/5), Active-Active

For Cost Optimization:
- GCP: Use HA VPN with minimal tunnels, monitor data transfer
- AWS: Consolidate VPNs via Transit Gateway
- Azure: Right-size gateway SKU, use Basic for dev/test

3.4 Dedicated Connectivity
---------------------------

┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Feature            │ GCP Interconnect │ AWS Direct Conn │ Azure ExpRoute │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ Bandwidth          │ 10/100 Gbps      │ 1/10/100 Gbps   │ 50M-100 Gbps   │
│                    │ (Dedicated)      │ (Dedicated)     │                │
│                    │ 50M-50G (Partner)│ 50M-10G (Hosted)│                │
│ SLA (redundant)    │ 99.99%           │ 99.99%          │ 99.95%         │
│ Locations          │ 100+ (Dedicated) │ 100+ (Dedicated)│ 200+ (partners)│
│ Encryption         │ MACsec (opt)     │ MACsec (opt)    │ MACsec (opt)   │
│ BGP Required       │ Yes              │ Yes             │ Yes            │
│ Private Peering    │ Yes (VPC)        │ Yes (VPC/VIF)   │ Yes (VNet)     │
│ Public Peering     │ Yes (Google APIs)│ Yes (Public VIF)│ Yes (Microsoft)│
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

GCP Cloud Interconnect:
- Dedicated Interconnect: 10/100 Gbps, direct to Google
- Partner Interconnect: 50 Mbps - 50 Gbps via partner
- VLAN attachments for connectivity to VPCs
- Supports multiple VPCs via single connection
- Private and Google APIs access

AWS Direct Connect:
- Dedicated Connection: 1/10/100 Gbps
- Hosted Connection: 50 Mbps - 10 Gbps via partner
- Virtual Interfaces (VIFs): Private, Public, Transit
- Direct Connect Gateway: Connect to multiple VPCs
- SiteLink: Direct connectivity between locations

Azure ExpressRoute:
- Circuit bandwidth: 50 Mbps - 100 Gbps
- Private peering: Access to VNets
- Microsoft peering: Access to Microsoft 365, Azure public
- Global Reach: Connect on-premises locations
- FastPath: Bypass ExpressRoute gateway for performance

Cost Comparison (Approximate):

GCP Dedicated Interconnect (10 Gbps):
- Port fee: ~$1,750/month
- Egress: $0.02-$0.05/GB (lower than internet egress)

AWS Direct Connect (10 Gbps):
- Port fee: ~$1,125/month
- Data transfer out: $0.02/GB

Azure ExpressRoute (10 Gbps):
- Circuit fee: ~$4,000-$5,000/month (varies by location)
- Includes data transfer (unlimited or metered plans)

================================================================================
4. SECURITY AND FIREWALL
================================================================================

4.1 Network Security Controls
------------------------------

┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Feature            │ GCP              │ AWS             │ Azure          │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ Virtual Firewall   │ VPC Firewall     │ Security Groups │ NSG (Network   │
│                    │ Rules            │ + NACLs         │ Security Group)│
│ Stateful           │ Yes              │ SG: Yes,        │ Yes            │
│                    │                  │ NACL: No        │                │
│ Direction          │ Ingress/Egress   │ Ingress/Egress  │ Inbound/Out    │
│ Default            │ Deny ingress,    │ Deny all (SG),  │ Deny ingress,  │
│                    │ Allow egress     │ Allow all (NACL)│ Allow egress   │
│ Applied To         │ Instances (tags/ │ ENI (SG),       │ Subnet or NIC  │
│                    │ service accounts)│ Subnet (NACL)   │                │
│ Rules Limit        │ 100 per network  │ 60 per SG       │ 1000 per NSG   │
│ Priority/Order     │ Priority (0-65535│ Evaluated       │ Priority (100- │
│                    │                  │ together        │ 4096)          │
│ Logging            │ Yes              │ VPC Flow Logs   │ NSG Flow Logs  │
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

GCP Firewall Rules:
- VPC-level firewall (global)
- Allow or deny rules
- Priority-based (0-65535, lower = higher priority)
- Target by tags, service accounts, or all instances
- Source/destination by IP, tags, service accounts
- Hierarchical firewall policies for organizations

Example:
gcloud compute firewall-rules create allow-ssh \
  --network=prod-vpc \
  --allow=tcp:22 \
  --source-ranges=10.0.0.0/8 \
  --target-tags=ssh-enabled \
  --priority=1000

AWS Security Groups:
- Instance-level firewall (attached to ENI)
- Allow rules only (implicit deny)
- Stateful (return traffic automatically allowed)
- Can reference other security groups
- Up to 5 security groups per instance

Example:
aws ec2 create-security-group \
  --group-name web-sg \
  --description "Web server security group" \
  --vpc-id vpc-12345678

aws ec2 authorize-security-group-ingress \
  --group-id sg-12345678 \
  --protocol tcp --port 443 \
  --cidr 0.0.0.0/0

AWS Network ACLs:
- Subnet-level firewall
- Allow and deny rules
- Stateless (must configure inbound and outbound)
- Numbered rules (100, 200, etc.)
- Default NACL allows all traffic

Azure Network Security Groups (NSG):
- Can apply to subnet or NIC
- Allow or deny rules
- Priority-based (100-4096, lower = higher priority)
- Service tags for Azure services
- Application Security Groups (ASGs) for logical grouping

Example:
az network nsg create --name web-nsg --resource-group prod-rg

az network nsg rule create \
  --nsg-name web-nsg \
  --resource-group prod-rg \
  --name allow-https \
  --priority 100 \
  --source-address-prefixes Internet \
  --destination-port-ranges 443 \
  --protocol Tcp \
  --access Allow

4.2 Cloud-Native Firewalls
---------------------------

GCP - Cloud Armor:
- DDoS protection and WAF
- Layer 7 filtering
- Preconfigured WAF rules (OWASP Top 10)
- Custom rules with CEL expressions
- Geographic restrictions
- Rate limiting
- Adaptive protection

AWS - AWS Network Firewall:
- Managed network firewall service
- Stateful inspection
- Intrusion prevention (IPS)
- Domain filtering
- Protocol detection
- Suricata-compatible rules

AWS - AWS WAF:
- Web application firewall
- Protects CloudFront, ALB, API Gateway
- Managed rule groups
- Rate limiting
- Bot control

Azure - Azure Firewall:
- Managed cloud firewall
- Application rules (FQDN filtering)
- Network rules (IP/port filtering)
- Threat intelligence
- DNS proxy
- Forced tunneling support
- Premium SKU: TLS inspection, IDPS, URL filtering

Comparison:

DDoS Protection:
- GCP: Cloud Armor (L3-L7), always-on at edge
- AWS: AWS Shield (Standard free, Advanced paid)
- Azure: DDoS Protection (Basic free, Standard paid)

Web Application Firewall:
- GCP: Cloud Armor
- AWS: AWS WAF
- Azure: Azure Web Application Firewall

Network Firewall:
- GCP: VPC Firewall Rules + third-party
- AWS: AWS Network Firewall
- Azure: Azure Firewall

4.3 Private Connectivity to Cloud Services
-------------------------------------------

GCP - Private Google Access / Private Service Connect:
- Private Google Access: Access Google APIs via internal IP
- Private Service Connect: VPC endpoint for Google services
- Private Service Connect for Producer services
- No internet gateway required

AWS - VPC Endpoints:
- Gateway Endpoints: S3, DynamoDB (free)
- Interface Endpoints: Most AWS services (PrivateLink)
- Endpoint policies for access control
- PrivateLink for third-party services

Azure - Private Endpoints / Service Endpoints:
- Service Endpoints: Azure services via optimized route
- Private Endpoints: Private IP for PaaS services
- Private Link: Access services privately
- Supports cross-region and cross-tenant

Feature Comparison:

┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Feature            │ GCP              │ AWS             │ Azure          │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ Free Tier          │ Private Google   │ Gateway Endpoints│ Service       │
│                    │ Access (free)    │ (S3, DynamoDB)  │ Endpoints (free│
│ Cost               │ PSC: Per GB      │ Interface: Per  │ Private Link:  │
│                    │                  │ hour + GB       │ Per hour + GB  │
│ Scope              │ Regional or      │ Regional or     │ Regional       │
│                    │ Global           │ Zonal           │                │
│ DNS                │ Auto or manual   │ Private DNS     │ Private DNS    │
│                    │                  │ enabled         │ zone           │
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

================================================================================
5. LOAD BALANCING
================================================================================

5.1 Load Balancer Types
------------------------

┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Type               │ GCP              │ AWS             │ Azure          │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ Global HTTP(S)     │ External App LB  │ CloudFront +    │ Front Door     │
│                    │ (Global)         │ ALB             │ + App Gateway  │
│ Regional HTTP(S)   │ External App LB  │ Application LB  │ Application    │
│                    │ (Regional)       │ (ALB)           │ Gateway        │
│ Layer 4 External   │ External Network │ Network LB (NLB)│ Load Balancer  │
│                    │ LB               │                 │ (Standard)     │
│ Layer 4 Internal   │ Internal Network │ Network LB      │ Load Balancer  │
│                    │ LB               │ (Internal)      │ (Internal)     │
│ Internal HTTP(S)   │ Internal App LB  │ ALB (Internal)  │ App Gateway    │
│                    │                  │                 │ (Internal)     │
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

GCP Load Balancers:

External Application Load Balancer (L7):
- Global or regional
- HTTP, HTTPS, HTTP/2, HTTP/3
- URL-based routing
- Cloud CDN integration
- SSL termination
- Anycast IP (global)

External Network Load Balancer (L4):
- Regional
- TCP/UDP pass-through or proxy
- Preserves source IP (pass-through mode)
- High performance (millions of requests/sec)

Internal Application Load Balancer (L7):
- Regional
- HTTP(S) within VPC
- Private load balancing

Internal Network Load Balancer (L4):
- Regional
- TCP/UDP within VPC
- Supports GKE Services

AWS Load Balancers:

Application Load Balancer (ALB):
- Layer 7 (HTTP/HTTPS)
- Path-based and host-based routing
- WebSocket support
- Integrates with AWS WAF
- Target types: instances, IPs, Lambda

Network Load Balancer (NLB):
- Layer 4 (TCP/UDP/TLS)
- Ultra-low latency
- Static IP addresses
- Preserves source IP
- Millions of requests/sec

Gateway Load Balancer (GWLB):
- Layer 3 gateway + Layer 4 load balancer
- Third-party virtual appliances
- Transparent network gateway

Classic Load Balancer (Legacy):
- Layer 4 and Layer 7
- Being phased out
- Use ALB or NLB instead

Azure Load Balancers:

Application Gateway:
- Layer 7 (HTTP/HTTPS)
- URL-based routing
- SSL termination
- Web Application Firewall (WAF)
- Autoscaling

Load Balancer:
- Layer 4 (TCP/UDP)
- Basic or Standard SKU
- Internal or external
- Zone-redundant (Standard SKU)
- HA Ports

Front Door:
- Global Layer 7 load balancer
- CDN capabilities
- SSL offload
- WAF integration
- URL-based routing

Traffic Manager:
- DNS-based load balancer
- Global traffic routing
- Multiple routing methods
- Health monitoring

5.2 Load Balancer Features Comparison
--------------------------------------

┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Feature            │ GCP              │ AWS             │ Azure          │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ Global LB          │ Yes (single IP)  │ CloudFront +    │ Front Door     │
│                    │                  │ regional ALB    │                │
│ SSL Termination    │ Yes              │ Yes (ALB/NLB)   │ Yes (App GW)   │
│ WebSocket          │ Yes              │ Yes (ALB)       │ Yes            │
│ HTTP/2             │ Yes              │ Yes (ALB)       │ Yes            │
│ HTTP/3 (QUIC)      │ Yes              │ No              │ No             │
│ Autoscaling        │ Automatic        │ Automatic       │ Manual or Auto │
│ Cross-Region LB    │ Native           │ Via CloudFront  │ Front Door     │
│ Preserve Source IP │ Yes (options)    │ Yes (NLB)       │ Yes            │
│ Session Affinity   │ Yes              │ Yes             │ Yes            │
│ Health Checks      │ Yes              │ Yes             │ Yes            │
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

Best Practices:

For Global Web Applications:
- GCP: External Application Load Balancer (Global) + Cloud CDN
- AWS: CloudFront + Regional ALBs
- Azure: Front Door + Application Gateway

For Internal Microservices:
- GCP: Internal Application Load Balancer
- AWS: Internal Application Load Balancer
- Azure: Internal Load Balancer (Standard)

For High-Performance TCP/UDP:
- GCP: External Network Load Balancer
- AWS: Network Load Balancer
- Azure: Load Balancer (Standard SKU)

================================================================================
6. DNS SERVICES
================================================================================

6.1 Managed DNS Comparison
---------------------------

┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Feature            │ GCP Cloud DNS    │ AWS Route 53    │ Azure DNS      │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ SLA                │ 100%             │ 100%            │ 100%           │
│ Anycast Network    │ Yes              │ Yes             │ Yes            │
│ Public Zones       │ Yes              │ Yes             │ Yes            │
│ Private Zones      │ Yes              │ Yes             │ Yes            │
│ DNSSEC             │ Yes              │ Yes             │ Yes (preview)  │
│ Query Volume       │ Unlimited        │ Unlimited       │ Unlimited      │
│ Routing Policies   │ Geo, Weighted,   │ Geo, Latency,   │ Traffic Manager│
│                    │ Round Robin      │ Failover, Multi │ (separate)     │
│ Health Checks      │ External only    │ Yes             │ Traffic Manager│
│ Pricing Model      │ Per zone + query │ Per zone + query│ Per zone + query│
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

GCP Cloud DNS:
- Managed authoritative DNS service
- 100% SLA
- Public and private zones
- DNSSEC support
- DNS policies (forwarding, peering)
- Cloud Logging integration

Pricing (approximate):
- Hosted zone: $0.20/month
- Queries: $0.40 per million (first billion)

Example:
gcloud dns managed-zones create prod-zone \
  --dns-name=example.com \
  --description="Production DNS zone"

gcloud dns record-sets create www.example.com \
  --zone=prod-zone \
  --type=A \
  --ttl=300 \
  --rrdatas=203.0.113.10

AWS Route 53:
- Managed DNS service
- 100% SLA
- Health checking and DNS failover
- Traffic flow (visual routing policies)
- Geo DNS, latency-based routing
- Integration with AWS services

Pricing (approximate):
- Hosted zone: $0.50/month
- Queries: $0.40 per million (standard)
- Health checks: $0.50/month each

Example:
aws route53 create-hosted-zone \
  --name example.com \
  --caller-reference 2024-01-01

aws route53 change-resource-record-sets \
  --hosted-zone-id Z123456 \
  --change-batch file://change.json

Azure DNS:
- Managed DNS hosting service
- 100% SLA
- Anycast network
- Public and private zones
- DNSSEC support (preview)
- Alias records for Azure resources

Pricing (approximate):
- Hosted zone: $0.50/month (first 25 zones)
- Queries: $0.40 per million (first billion)

Example:
az network dns zone create \
  --resource-group prod-rg \
  --name example.com

az network dns record-set a add-record \
  --resource-group prod-rg \
  --zone-name example.com \
  --record-set-name www \
  --ipv4-address 203.0.113.10

6.2 Private DNS
----------------

GCP Cloud DNS Private Zones:
- Private DNS within VPC
- VPC-scoped visibility
- DNS peering between VPCs
- Forwarding to on-premises DNS
- Split-horizon DNS support

AWS Route 53 Private Hosted Zones:
- Private DNS for VPC
- Associated with one or more VPCs
- Cross-account associations
- Resolver endpoints for hybrid DNS
- Conditional forwarding rules

Azure Private DNS:
- Private DNS zones for VNets
- Automatic registration for VMs
- Virtual network links
- Cross-region support
- Integration with Private Endpoints

================================================================================
7. CONTENT DELIVERY AND EDGE
================================================================================

7.1 CDN Comparison
-------------------

┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Feature            │ GCP Cloud CDN    │ AWS CloudFront  │ Azure CDN      │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ PoPs               │ 187+ (Google)    │ 450+ (AWS)      │ 200+ (MS/Part) │
│ Origin             │ GCP LB, GCS      │ S3, ALB, Custom │ Storage, Apps  │
│ SSL/TLS            │ Yes (free certs) │ Yes (free certs)│ Yes            │
│ Cache Control      │ Yes              │ Yes             │ Yes            │
│ Purge              │ Yes (by URL)     │ Yes (by path)   │ Yes            │
│ Compression        │ Automatic        │ Automatic       │ Yes            │
│ HTTP/2, HTTP/3     │ Yes              │ HTTP/2 only     │ HTTP/2         │
│ Custom Domains     │ Yes              │ Yes             │ Yes            │
│ Signed URLs        │ Yes              │ Yes             │ Yes            │
│ Real-time Logs     │ Yes              │ Yes             │ Yes            │
│ Edge Computing     │ No (see Media CDN│ Lambda@Edge,    │ No             │
│                    │                  │ CloudFront Func │                │
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

GCP Cloud CDN:
- Integrated with External Application Load Balancer
- Caches content at Google's edge locations
- Anycast IP addresses
- Negative caching
- Cache modes: CACHE_ALL_STATIC, USE_ORIGIN_HEADERS, FORCE_CACHE_ALL

Pricing:
- Cache fill (origin to CDN): Standard egress
- Cache egress (CDN to client): $0.04-$0.08/GB (varies by region)

AWS CloudFront:
- Global CDN with 450+ PoPs
- Origins: S3, ALB, custom HTTP servers
- Lambda@Edge for edge computing
- CloudFront Functions for lightweight compute
- Field-level encryption
- Real-time logs to Kinesis

Pricing:
- Data transfer out: $0.085-$0.140/GB (varies by region)
- Requests: $0.0075-$0.016 per 10,000 requests

Azure CDN:
- Multiple providers: Microsoft, Verizon, Akamai
- Standard and Premium tiers
- Rules engine for advanced caching
- Compression
- Geo-filtering

Pricing:
- Varies by provider
- Microsoft CDN: $0.081-$0.170/GB
- Verizon/Akamai: Higher pricing, more features

7.2 Edge Computing
-------------------

GCP:
- Cloud Functions (not edge)
- Cloud Run (not edge)
- Media CDN (for media delivery with edge capabilities)

AWS:
- Lambda@Edge: Node.js, Python functions at edge
- CloudFront Functions: JavaScript, sub-millisecond execution
- Use cases: A/B testing, auth, URL rewriting

Azure:
- Azure Functions (not edge)
- Static Web Apps (edge deployment)
- Limited edge compute compared to AWS

================================================================================
8. NETWORK MONITORING AND OBSERVABILITY
================================================================================

8.1 Flow Logs
-------------

┌────────────────────┬──────────────────┬─────────────────┬────────────────┐
│ Feature            │ GCP VPC Flow     │ AWS VPC Flow    │ Azure NSG Flow │
│                    │ Logs             │ Logs            │ Logs           │
├────────────────────┼──────────────────┼─────────────────┼────────────────┤
│ Granularity        │ Per subnet       │ Per VPC, subnet,│ Per NSG        │
│                    │                  │ or ENI          │                │
│ Sampling           │ Configurable     │ All traffic     │ All traffic    │
│                    │ (0.0-1.0)        │                 │                │
│ Aggregation        │ 5s, 30s, 1m, 5m  │ 1m, 10m         │ 1m             │
│ Metadata           │ Extensive        │ Standard        │ Standard       │
│ Destination        │ Cloud Logging,   │ CloudWatch Logs,│ Storage, Log   │
│                    │ Storage, BigQuery│ S3, Kinesis     │ Analytics      │
│ Cost               │ $0.50 per GB     │ $0.50 per GB    │ Ingestion fees │
│ Analysis Tools     │ BigQuery, Log    │ Athena, CloudW  │ Traffic        │
│                    │ Analytics        │ Insights        │ Analytics      │
└────────────────────┴──────────────────┴─────────────────┴────────────────┘

GCP VPC Flow Logs:
- Enabled per subnet
- Sampling rate: 0.0 (off) to 1.0 (100%)
- Metadata: VPC, subnet, VM, GKE pod details
- Export to Cloud Logging, Cloud Storage, BigQuery
- Real-time analysis with BigQuery

Enable flow logs:
gcloud compute networks subnets update prod-subnet \
  --region=us-central1 \
  --enable-flow-logs \
  --logging-aggregation-interval=interval-5-sec \
  --logging-flow-sampling=0.1 \
  --logging-metadata=include-all

AWS VPC Flow Logs:
- Enabled per VPC, subnet, or ENI
- Captures accepted, rejected, or all traffic
- Destinations: CloudWatch Logs, S3, Kinesis Data Firehose
- Custom format support
- Analysis with Athena

Enable flow logs:
aws ec2 create-flow-logs \
  --resource-type VPC \
  --resource-ids vpc-12345678 \
  --traffic-type ALL \
  --log-destination-type s3 \
  --log-destination arn:aws:s3:::my-flow-logs

Azure NSG Flow Logs:
- Enabled per Network Security Group
- Version 1 or Version 2 (adds flow state)
- Destinations: Storage Account
- Traffic Analytics for visualization
- Retention policies

Enable flow logs:
az network watcher flow-log create \
  --location eastus \
  --name nsg-flow-log \
  --nsg /subscriptions/.../networkSecurityGroups/web-nsg \
  --storage-account /subscriptions/.../storageAccounts/logs

8.2 Network Monitoring Tools
-----------------------------

GCP Network Intelligence Center:
- Network Topology: Visual representation
- Connectivity Tests: End-to-end testing
- Performance Dashboard: Latency, packet loss
- Firewall Insights: Rule optimization
- Network Analyzer: Configuration verification

AWS Network Monitoring:
- VPC Reachability Analyzer: Path analysis
- Network Access Analyzer: Unintended access
- Transit Gateway Network Manager: Global dashboard
- CloudWatch: Metrics and alarms
- VPC Traffic Mirroring: Deep packet inspection

Azure Network Monitoring:
- Network Watcher: Connectivity testing, packet capture
- Connection Monitor: End-to-end monitoring
- NSG Diagnostics: Flow verification
- Traffic Analytics: Visualization and analysis
- Azure Monitor: Metrics and logs

8.3 Packet Capture and Analysis
--------------------------------

GCP Packet Mirroring:
- Mirror traffic from VMs to collector
- Filter by protocol, CIDR, tags
- Multiple sources to single collector
- High cost (data processing)

AWS VPC Traffic Mirroring:
- Mirror traffic from ENIs
- Filter by traffic direction, protocol
- Send to network appliances or monitoring tools
- Additional data transfer costs

Azure Packet Capture:
- Network Watcher packet capture
- Capture from VM NICs
- Time-limited sessions
- Storage in blob storage or local VM
- Free (storage costs only)

================================================================================
9. PRICING COMPARISON
================================================================================

9.1 Data Transfer Costs
------------------------

Egress Pricing (Approximate, per GB to Internet):

GCP:
- 0-1 TB: $0.12 (Worldwide - Premium Tier)
- 1-10 TB: $0.11
- 10+ TB: $0.08
- Standard Tier: ~$0.085-$0.12 (regional egress)
- Inter-region (same continent): $0.01
- Inter-region (cross-continent): $0.05-$0.08

AWS:
- 0-10 TB: $0.09 (US/Europe)
- 10-50 TB: $0.085
- 50-150 TB: $0.07
- 150+ TB: $0.05
- Inter-region: $0.02 (same continent)
- CloudFront: $0.085+ (varies by region)

Azure:
- 0-10 TB: $0.087 (Zone 1: North America, Europe)
- 10-50 TB: $0.083
- 50-150 TB: $0.07
- 150-500 TB: $0.05
- Inter-region: Varies
- CDN: $0.081+ (varies by provider)

Key Observations:
- All three are similar for internet egress
- GCP Premium Tier is highest but includes global routing
- AWS and Azure have similar tiered pricing
- Ingress is free on all platforms
- Inter-region pricing varies significantly

9.2 Network Service Costs
--------------------------

VPN (Approximate monthly cost):

GCP Cloud VPN:
- HA VPN Gateway: $0.05/hour (~$36/month) per gateway
- Tunnels: No additional charge
- Data transfer: Standard egress rates

AWS VPN:
- VPN Connection: $0.05/hour (~$36/month)
- Data transfer: Standard AWS rates
- Transit Gateway attachment: Additional $0.05/hour

Azure VPN Gateway:
- VpnGw1: ~$140/month
- VpnGw2: ~$356/month
- VpnGw3: ~$412/month
- Higher tiers for better performance
- Data transfer: Standard Azure rates

Dedicated Connectivity (10 Gbps, approximate):

GCP Dedicated Interconnect:
- Port fee: ~$1,750/month
- Reduced egress: $0.02/GB (vs $0.12/GB internet)

AWS Direct Connect:
- Port fee: ~$1,125/month
- Reduced egress: $0.02/GB

Azure ExpressRoute:
- Circuit: ~$4,000-$5,000/month (varies by location)
- Unlimited or metered data transfer

Load Balancing:

GCP:
- Forwarding rule: $0.025/hour (~$18/month)
- Data processed: $0.008/GB

AWS:
- ALB: $0.0225/hour (~$16/month)
- LCU (Load Balancer Capacity Units): $0.008/hour

Azure:
- Basic Load Balancer: Free
- Standard Load Balancer: $0.025/hour (~$18/month)
- Rules: $0.01/hour per rule

================================================================================
10. USE CASE RECOMMENDATIONS
================================================================================

10.1 Choose GCP When:
---------------------

Strengths:
+ Global VPC simplifies multi-region deployments
+ Best for data analytics (BigQuery, Dataflow)
+ Strong Kubernetes support (GKE)
+ Excellent network performance (Premium Tier)
+ Simple, predictable pricing
+ Strong in AI/ML workloads

Best For:
- Startups with global user base
- Data-intensive applications
- Container-based architectures
- Machine learning workloads
- Google Workspace integration

Example Architecture:
- Single global VPC
- GKE for container workloads
- Cloud CDN for global content delivery
- Cloud Armor for security
- BigQuery for analytics

10.2 Choose AWS When:
---------------------

Strengths:
+ Largest service catalog
+ Most mature platform
+ Extensive third-party integrations
+ Best documentation and community
+ Most regions and availability zones
+ Strong enterprise support

Best For:
- Enterprise applications
- Diverse workload requirements
- Need for specialized services
- Maximum vendor ecosystem
- Compliance requirements (most certifications)

Example Architecture:
- VPCs per region
- Transit Gateway for hub-and-spoke
- Route 53 for DNS and traffic routing
- CloudFront for global delivery
- Wide range of compute options

10.3 Choose Azure When:
-----------------------

Strengths:
+ Best hybrid cloud capabilities
+ Windows and .NET integration
+ Active Directory integration
+ Office 365 integration
+ Enterprise agreements (existing MS customers)
+ Most regions globally

Best For:
- Microsoft shops (Windows, AD, Office 365)
- Hybrid cloud deployments
- Government and regulated industries
- .NET applications
- ExpressRoute connectivity available

Example Architecture:
- Hub-and-spoke with Virtual WAN
- Azure AD integration
- ExpressRoute for hybrid connectivity
- Azure Firewall for security
- Application Gateway for web apps

10.4 Multi-Cloud Strategy
--------------------------

Reasons for Multi-Cloud:
- Avoid vendor lock-in
- Leverage best-of-breed services
- Geographic coverage
- Risk mitigation
- Regulatory compliance

Challenges:
- Increased complexity
- Higher operational overhead
- Skills requirements
- Cost management
- Network integration

Best Practices for Multi-Cloud:
1. Use infrastructure as code (Terraform)
2. Standardize on container orchestration (Kubernetes)
3. Implement consistent security policies
4. Use cloud-agnostic monitoring (Datadog, New Relic)
5. Plan for data transfer costs
6. Document connectivity patterns

================================================================================
11. MIGRATION CONSIDERATIONS
================================================================================

11.1 Network Migration Patterns
--------------------------------

Lift-and-Shift:
- Recreate on-premises network topology in cloud
- VPN or Dedicated connection for hybrid period
- Migrate applications in phases
- Challenges: Not cloud-native, may not leverage cloud benefits

Re-architecture:
- Redesign for cloud-native patterns
- Use managed services where possible
- Implement auto-scaling and redundancy
- Challenges: Requires more effort, application changes

Hybrid Long-term:
- Some workloads remain on-premises
- Consistent networking across environments
- Consider Azure (best hybrid story)
- Challenges: Complexity, ongoing management

11.2 Network Connectivity During Migration
-------------------------------------------

Phase 1: Assessment
- Inventory applications and dependencies
- Map network flows
- Identify bandwidth requirements
- Plan IP addressing (avoid conflicts)

Phase 2: Connectivity Setup
- Establish VPN or Dedicated connection
- Set up DNS (hybrid DNS or conditional forwarding)
- Configure routing (BGP preferred)
- Test connectivity

Phase 3: Migration
- Migrate in waves (least dependent first)
- Use cloud load balancers for gradual cutover
- Maintain hybrid connectivity
- Monitor and optimize

Phase 4: Optimization
- Right-size resources
- Optimize data transfer costs
- Implement cloud-native patterns
- Decommission on-premises (if applicable)

11.3 Tools for Migration
-------------------------

GCP:
- Migrate for Compute Engine
- Transfer Appliance (offline data transfer)
- Storage Transfer Service
- Database Migration Service

AWS:
- AWS Migration Hub
- Server Migration Service (SMS)
- Database Migration Service (DMS)
- DataSync, Snowball (data transfer)

Azure:
- Azure Migrate
- Azure Site Recovery
- Azure Database Migration Service
- Data Box (offline data transfer)

================================================================================
12. BEST PRACTICES SUMMARY
================================================================================

12.1 IP Address Planning
-------------------------

All Platforms:
✓ Use RFC 1918 addresses
✓ Avoid overlapping with on-premises
✓ Plan for growth (3-5 years)
✓ Document in IPAM system
✓ Reserve ranges for future services

GCP Specific:
✓ Leverage global VPC for simplicity
✓ Use regional subnets
✓ Plan for subnet expansion

AWS Specific:
✓ Plan VPC per region
✓ Consider Transit Gateway early
✓ Use VPC peering judiciously

Azure Specific:
✓ Plan VNet per region
✓ Consider Virtual WAN for hub-and-spoke
✓ Use VNet peering for connectivity

12.2 Security
-------------

All Platforms:
✓ Defense in depth (multiple layers)
✓ Least privilege access
✓ Enable logging and monitoring
✓ Use private connectivity for PaaS
✓ Encrypt data in transit and at rest

GCP Specific:
✓ Use service accounts for firewall rules
✓ Enable Private Google Access
✓ Implement VPC Service Controls
✓ Use Cloud Armor for web apps

AWS Specific:
✓ Use Security Groups and NACLs
✓ Implement VPC Endpoints
✓ Enable GuardDuty
✓ Use AWS WAF and Shield

Azure Specific:
✓ Use NSGs and Application Security Groups
✓ Implement Private Endpoints
✓ Enable Azure Firewall
✓ Use DDoS Protection Standard

12.3 High Availability
----------------------

All Platforms:
✓ Deploy across multiple availability zones
✓ Use managed services (automatically HA)
✓ Implement health checks
✓ Plan for regional failures
✓ Test failover scenarios

GCP Specific:
✓ Use HA VPN with multiple tunnels
✓ Leverage global load balancing
✓ Deploy regional managed instance groups

AWS Specific:
✓ Use multiple VPN connections
✓ Leverage Auto Scaling groups
✓ Consider multi-region with Route 53

Azure Specific:
✓ Use zone-redundant services
✓ Implement availability sets or zones
✓ Use Traffic Manager for multi-region

12.4 Cost Optimization
----------------------

All Platforms:
✓ Monitor data transfer costs
✓ Use CDN to reduce egress
✓ Right-size resources
✓ Delete unused resources (IPs, NAT gateways)
✓ Use reserved capacity where applicable

GCP Specific:
✓ Consider Standard Tier for non-critical egress
✓ Use Cloud CDN cache hit ratio optimization
✓ Leverage sustained use discounts

AWS Specific:
✓ Use S3 Transfer Acceleration judiciously
✓ Consider consolidating VPNs via Transit Gateway
✓ Use VPC endpoints for AWS services (reduce NAT costs)

Azure Specific:
✓ Right-size VPN Gateway SKUs
✓ Use Basic Load Balancer for dev/test
✓ Monitor ExpressRoute utilization

================================================================================
REFERENCES AND DOCUMENTATION
================================================================================

1. Google Cloud Platform
   - VPC Documentation
     https://cloud.google.com/vpc/docs
   - Cloud Interconnect Documentation
     https://cloud.google.com/network-connectivity/docs/interconnect
   - Cloud Load Balancing
     https://cloud.google.com/load-balancing/docs
   - Best Practices for VPC Design
     https://cloud.google.com/solutions/best-practices-vpc-design

2. Amazon Web Services
   - VPC User Guide
     https://docs.aws.amazon.com/vpc/
   - Direct Connect Documentation
     https://docs.aws.amazon.com/directconnect/
   - Elastic Load Balancing
     https://docs.aws.amazon.com/elasticloadbalancing/
   - AWS Well-Architected Framework
     https://aws.amazon.com/architecture/well-architected/

3. Microsoft Azure
   - Virtual Network Documentation
     https://docs.microsoft.com/azure/virtual-network/
   - ExpressRoute Documentation
     https://docs.microsoft.com/azure/expressroute/
   - Load Balancer Documentation
     https://docs.microsoft.com/azure/load-balancer/
   - Azure Architecture Center
     https://docs.microsoft.com/azure/architecture/

4. Comparison Resources
   - "Cloud Computing Compared: AWS, Azure, and GCP" (O'Reilly)
   - Gartner Magic Quadrant for Cloud Infrastructure
   - Forrester Wave: Public Cloud Platforms
   - Cloud Provider Comparison websites (CloudComparison.io, etc.)

5. Training and Certification
   - Google Cloud Professional Cloud Network Engineer
   - AWS Certified Advanced Networking - Specialty
   - Microsoft Certified: Azure Network Engineer Associate
   - Multi-cloud certifications (HashiCorp, etc.)

6. Industry Analysis
   - Synergy Research Group - Cloud market share reports
   - Canalys - Cloud infrastructure spending
   - IDC - Public Cloud Services Tracker
   - Right Scale/Flexera State of the Cloud Report

7. Books
   - "Google Cloud Platform for Architects" by Vitthal Srinivasan
   - "AWS Certified Advanced Networking Official Study Guide" (Sybex)
   - "Exam Ref AZ-700 Designing and Implementing Azure Networking" (Microsoft)
   - "Multi-Cloud Architecture and Governance" by Jeroen Mulder (Packt)

================================================================================
DECISION MATRIX
================================================================================

Quick Decision Guide:

Choose GCP if:
☑ Need global VPC simplicity
☑ Focus on data analytics and ML
☑ Strong Kubernetes requirements
☑ Prefer predictable networking model
☑ Google Workspace integration important

Choose AWS if:
☑ Need largest service catalog
☑ Require mature ecosystem
☑ Want most regions/AZs
☑ Need specialized services
☑ Prefer market leader stability

Choose Azure if:
☑ Microsoft-centric organization
☑ Hybrid cloud priority
☑ Active Directory integration required
☑ Office 365 integration needed
☑ Existing EA with Microsoft

Consider Multi-Cloud if:
☑ Avoiding vendor lock-in is critical
☑ Need best-of-breed services
☑ Geographic coverage gaps
☑ Risk mitigation strategy
☑ Regulatory requirements

================================================================================
END OF DOCUMENT
================================================================================
